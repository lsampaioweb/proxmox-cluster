---
- name: "Creating variables"
  ansible.builtin.set_fact:
    cluster_master_node: "{{ groups['hosts'][0] }}"

- name: "Checking if the cluster already exists (on each and every node)"
  ansible.builtin.stat:
    path: "/etc/pve/corosync.conf"
  register: "corosync"

- name: "Creating cluster (only on {{ cluster_master_node }})"
  run_once: true
  ansible.builtin.command: "pvecm create {{ cluster_name }} -link0 address={{ cluster_ip }},priority=0 -link1 address={{ wan_management_ip }},priority=1"
  register: "create_cluster"
  changed_when: create_cluster.rc == 0
  notify: "Waiting 10 seconds"
  when: ansible_hostname == cluster_master_node and not corosync.stat.exists

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  ansible.builtin.meta: "flush_handlers"

- name: "Adding nodes to cluster"
  throttle: 1
  ansible.builtin.expect:
    command: >-
      pvecm add {{ cluster_master_node }}
      -link0 address={{ cluster_ip }},priority=0
      -link1 address={{ wan_management_ip }},priority=1
      -force
    responses:
      "Please enter": "{{ proxmox_root_password }}"
      "Are you sure": "yes"
    echo: true
  timeout: 30
  no_log: true
  register: "join_cluster"
  changed_when:
    - "'successfully added node' in join_cluster.stdout"
  failed_when:
    - "'Cluster join aborted' in join_cluster.stdout"
  when: ansible_hostname != cluster_master_node and not corosync.stat.exists

- name: "Printing variables"
  ansible.builtin.debug:
    msg:
      - "create_cluster: {{ create_cluster | default('') }}"
      - "join_cluster: {{ join_cluster | default('') }}"
  when: debug | bool
