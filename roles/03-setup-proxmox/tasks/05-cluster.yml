---
- name: Creating variable cluster_master_node
  set_fact:
    cluster_master_node: "{{ groups['Proxmox'][2] }}"

- name: Checking if the cluster already exists
  stat:
    path: "/etc/pve/corosync.conf"
  register: corosync

- name: Creating cluster (only on {{ cluster_master_node }})
  command: "pvecm create {{ cluster_name }} -link0 address={{ management_ip }}"
  register: create_cluster
  when: ansible_hostname == cluster_master_node and not corosync.stat.exists

- name: Adding the fingerprint of each host into the know_hosts file
  known_hosts:
    name: "{{ item }}.{{ domain }}"
    key: "{{ lookup('pipe', 'ssh-keyscan -t ecdsa {{ item }}.{{ domain }}') }}"
  when: ansible_hostname != item
  loop: "{{ groups['Proxmox'] }}"

- name: Adding the fingerprint of each host into the know_hosts file
  known_hosts:
    name: "{{ hostvars[item].management_ip }}"
    key: "{{ lookup('pipe', 'ssh-keyscan -t ecdsa {{ hostvars[item].management_ip }}') }}"
  when: ansible_hostname != item
  loop: "{{ groups['Proxmox'] }}"

- name: Adding the fingerprint of each host into the know_hosts file
  known_hosts:
    name: "{{ hostvars[item].internal_ip }}"
    key: "{{ lookup('pipe', 'ssh-keyscan -t ecdsa {{ hostvars[item].internal_ip }}') }}"
  when: ansible_hostname != item
  loop: "{{ groups['Proxmox'] }}"

- name: Adding nodes to cluster
  throttle: 1
  expect:
    command: "pvecm add {{ hostvars[cluster_master_node].management_ip }} -link0 address={{ management_ip }} -force"
    responses:
      'Please enter': "{{ proxmox_root_password }}"
      'Are you sure': "yes"
    echo: yes
  no_log: true
  register: join_cluster
  when: ansible_hostname != cluster_master_node and not corosync.stat.exists
