---
- name: "Removing the pve-enterprise repositories from sources list"
  ansible.builtin.apt_repository:
    repo: "{{ item.repo }}"
    update_cache: false
    state: "absent"
  loop:
    - {repo: "deb https://enterprise.proxmox.com/debian/ceph-quincy bookworm enterprise"}
    - {repo: "deb https://enterprise.proxmox.com/debian/pve bookworm pve-enterprise"}

- name: "Adding the pve-no-subscription repository into sources list"
  ansible.builtin.apt_repository:
    repo: "deb http://download.proxmox.com/debian/pve bookworm pve-no-subscription"
    filename: "pve-no-subscription"
    state: "present"

- name: "Adding non-free repositories into sources list"
  ansible.builtin.replace:
    path: "/etc/apt/sources.list"
    regexp: "main contrib$"
    replace: "main contrib non-free non-free-firmware"

- name: "Installing required packages"
  ansible.builtin.include_tasks: "{{ path_packages_apt }}"
  vars:
    update_cache: true
    upgrade: "safe"
    packages:
      - {name: "sudo"} # To enable elevated command.
      - {name: "python3-pip"} # To enable ansible scripts.
      - {name: "chrony"} # To enable time synchronization.
      - {name: "ethtool"} # To enable Wake-on-Lan.
      - {name: "libsasl2-modules"} # Necessary to Postfix.
      - {name: "ifupdown2"} # To enable make changes on the network configuration and don't require server reboot.
      - {name: "parted"} # To format hard disks (HDD, SSD and NVME).
      - {name: "qrencode"} # To enable two-factor authentication (2FA).
      - {name: "numactl"} # Control NUMA policy for processes or shared memory.
      - {name: "libegl1"} # To enable virtio-gl.
      - {name: "libgl1"} # To enable virtio-gl.

      # New way on Proxmox to install pip applications.
      - {name: "python3-pip"} # To install other python applications.
      - {name: "python3-proxmoxer"} # To enable ansible scripts.
      - {name: "python3-requests"} # To enable ansible scripts.
      - {name: "python3-pexpect"} # To enable ansible scripts that use the

- name: "Installing the intel-microcode package to fix the CPU bug"
  ansible.builtin.include_tasks: "{{ path_packages_apt }}"
  vars:
    packages:
      - {name: "intel-microcode"} # To fix the intel microcode bug.
  when: ansible_processor is search('Intel')

- name: "Checking if a reboot is required"
  ansible.builtin.import_tasks: "roles/common/tasks/debian/os/reboot-if-required.yml"
